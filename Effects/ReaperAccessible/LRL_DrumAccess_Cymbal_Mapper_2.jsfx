desc: DrumAccess Cymbal Mapper 2 (LRL ReaperAccessible)
version: 1.0
author: Louis-rock Lampron


in_pin:none
out_pin:none

@init

inpos=2;
statNoteOn = $x90;
statNoteOff = $x80;

// tableau interne
symbalsa=100;
symbalsb=200;
symbalsc=300; // choc
symbalsa[1.0] = 49;
symbalsb[1] = 49;
symbalsc[1] = 27;
symbalsa[2] = 50;
symbalsb[2] = 50;
symbalsc[2] = 28;
symbalsa[3] = 54;
symbalsb[3] = 55;
symbalsc[3] = 30;
symbalsa[4] = 56;
symbalsb[4] = 57;
symbalsc[4] = 31;
symbalsa[5] = 58;
symbalsb[5] = 59;
symbalsc[5] = 32;
symbalsa[6] = 60;
symbalsb[6] = 61;
symbalsc[6] = 33;
symbalsa[7] = 62;
symbalsb[7] = 63;
symbalsc[7] = 34;

@block
while(
  midirecv(offset, msg1, msg23)) (
  // Extract message type
  status = msg1 & $xF0;
  // Is it a note event?
  status == statNoteOn || status == statNoteOff ? 
  (
    // Extract note value
    note = msg23 & $x7F;
    // is it de good one
    note == symbalsa[inpos] || note == symbalsb[inpos] || note == symbalsc[inpos] ? 
    (
      // Substitute note value and pass on modified message
// ...
      inpos<3 ? 
      (
        note == symbalsc[inpos] ?
        (
          i=0;
          loop(7, 
            i +=1;
            midisend(offset, msg1, (msg23 & $xFF00) | symbalsc[i]);
          );
        ) : (
          i=0;
          loop(7, 
            i +=1;
            midisend(offset, msg1, (msg23 & $xFF00) | symbalsb[i]);
          );
        );
      ) : (
        note == symbalsa[inpos] ? 
        (
          i=0;
          loop(7, 
            i +=1;
            midisend(offset, msg1, (msg23 & $xFF00) | symbalsa[i]);
          );
        );
        note == symbalsb[inpos] ? 
        (
          i=0;
          loop(7, 
            i +=1;
            midisend(offset, msg1, (msg23 & $xFF00) | symbalsb[i]);
          );
        );
        note == symbalsc[inpos] ? 
        (
          i=0;
          loop(7,
            i +=1;
            midisend(offset, msg1, (msg23 & $xFF00) | symbalsc[i]);
          );
        );
      );
    );
  );
);
